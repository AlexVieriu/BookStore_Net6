@page "/author/update/{id:int}"

@inject IAuthorService authorService
@inject NavigationManager navManager
@inject IMapper map

@attribute [Authorize(Roles = UserRoles.Administrator)]

<h3>Update Author</h3>

@if (Author != null)
{
    <div class="card col-6 p-4 mt-4">
        <EditForm Model="Author" OnValidSubmit="OnUpdateAuthor">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div>
                <label class="fw-bold">First Name</label>
                <InputText class="form-control mb-3" @bind-Value="Author.FirstName" />
            </div>

            <div>
                <label class="fw-bold">Last Name</label>
                <InputText class="form-control mb-3" @bind-Value="Author.LastName" />
            </div>

            <div>
                <label class="fw-bold">Bio</label>
                <InputTextArea class="form-control mb-3" @bind-Value="Author.Bio" />
            </div>

            <div class="d-flex justify-content-around">
                <button class="btn btn-primary col-5" type="submit">
                    <span class="oi oi-pencil"></span>
                    Update Author
                </button>
                <button @onclick="BackToList" class="btn btn-secondary col-5" type="button">
                    <span class="oi oi-media-skip-backward"></span>
                    Back To List
                </button>
            </div>
        </EditForm>
    </div>
}


@code {
    private AuthorUpdateDto Author = new();

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var response = await authorService.GetAuthor(Id);

        if (response.Data != null)
        {
            var authorUpdate = map.Map<AuthorUpdateDto>(response.Data);
            if (response.Success)
                Author = authorUpdate;
        }
    }

    private async Task OnUpdateAuthor()
    {
        var response = await authorService.UpdateAuthor(Id, Author);
        if (response.Success)
            BackToList();
    }

    private void BackToList()
    {
        navManager.NavigateTo("/authors");
    }
}